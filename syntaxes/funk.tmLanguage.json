{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Funk",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#keywords" },
		{ "include": "#strings" },
		{ "include": "#characters" },
		{ "include": "#numbers" },
		{ "include": "#generic-types" },
		{ "include": "#types" },
		{ "include": "#functions" },
		{ "include": "#data-structures" },
		{ "include": "#pipe-operator" },
		{ "include": "#compound-operators" },
		{ "include": "#operators" },
		{ "include": "#variables" }
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign.funk",
					"match": "#[^#].*$"
				},
				{
					"name": "comment.block.funk",
					"begin": "##",
					"end": "##",
					"captures": {
						"0": { "name": "punctuation.definition.comment.funk" }
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.funk",
					"match": "\\b(if|else|while|return|match|case|none|mut)\\b"
				},
				{
					"name": "keyword.other.funk",
					"match": "\\b(funk|data)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.funk",
					"match": "\\b(numb|real|bool|char|text|list|none)\\b"
				}
			]
		},
		"generic-types": {
			"begin": "\\b(list)<",
			"beginCaptures": {
				"0": { "name": "storage.type.generic.funk" },
				"1": { "name": "storage.type.funk" }
			},
			"end": ">",
			"endCaptures": {
				"0": { "name": "storage.type.generic.funk" }
			},
			"patterns": [
				{ "include": "#types" }
			]
		},
		"strings": {
			"name": "string.quoted.double.funk",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.funk",
					"match": "\\\\."
				}
			]
		},
		"characters": {
			"name": "string.quoted.single.funk",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.funk",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.integer.funk",
					"match": "\\b\\d+\\b"
				},
				{
					"name": "constant.numeric.float.funk",
					"match": "\\b\\d+\\.\\d+\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.funk",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\=\\s*\\()"
				},
				{
					"name": "entity.name.function.funk",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
				}
			]
		},
		"data-structures": {
			"patterns": [
				{
					"name": "entity.name.type.funk",
					"match": "\\b([A-Z][a-zA-Z0-9_]*)\\b"
				}
			]
		},
		"pipe-operator": {
			"name": "keyword.operator.pipe.funk",
			"match": "\\>\\>"
		},
		"compound-operators": {
			"name": "keyword.operator.comparison.funk",
			"match": "==|!=|<=|>="
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.comparison.funk",
					"match": "(?<![<>])[<>](?![<>])"
				},
				{
					"name": "keyword.operator.arithmetic.funk",
					"match": "\\+|\\-|\\*|\\/|\\%"
				},
				{
					"name": "keyword.operator.assignment.funk",
					"match": "\\="
				},
				{
					"name": "keyword.operator.logical.funk",
					"match": "\\!|\\&\\&|\\|\\|"
				},
				{
					"name": "keyword.operator.bitwise.funk",
					"match": "\\&|\\||\\^|\\~"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.funk",
					"match": "\\b[a-z][a-zA-Z0-9_]*\\b"
				}
			]
		}
	},
	"scopeName": "source.funk"
}
